@model OnlineFoodDelivery.Models.product

@{
    ViewBag.Title = "Edit";
}
<style>
    .container-fluid {
        margin-top:-20px;
        background-image: url('../../images/editfood.jpg');
        background-repeat:no-repeat;
        background-size:auto;
        height:700px;
        width:1000px;
    }
    .form-horizontal{
        margin-left:200px;
    }
    .div1 {
        margin-left: 400px;
        margin-top:-28px;
    }
</style>
<div class="container-fluid">
  
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <br /><br />
            <h4>Edit Food Details</h4>
            <br /><br />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.productid)
            <div class="form-group">
                @Html.LabelFor(model => model.productid, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.productid, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.productid, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.productname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.productname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.productname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-outline-success btn-sm" />
                </div>
            </div>
        </div>
    }

<div class="div1">
    @Html.ActionLink("Back to FoodList", "Index", "Products", null, new { @class = "btn btn-outline-dark btn-sm" })
</div>
</div>